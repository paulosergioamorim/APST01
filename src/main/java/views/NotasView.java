package views;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import controls.Control;
import models.entitys.Aluno;
import models.entitys.Turma;

import javax.swing.*;
import java.awt.*;
import java.util.List;
import java.util.stream.Collectors;

import static models.Estado.FECHADA;
import static models.Format.decimalMask;
import static models.View.MAIN_VIEW;

public class NotasView extends JFrame {
    private final Control control;
    private JPanel panel;
    private JComboBox<Turma> turmaBox;
    private JComboBox<Aluno> alunoBox;
    private JFormattedTextField notaField;
    private JButton fecharTurmaButton;
    private JButton salvarNotaButton;

    public NotasView(final Control control) {
        super("Notas");
        this.control = control;
        this.$$$setupUI$$$();
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setContentPane(this.panel);
        this.setSize(500, 300);
        this.setLocationRelativeTo(null);

        this.turmaBox.addActionListener(e -> this.populateAlunos());
        this.salvarNotaButton.addActionListener(e -> control.setNota());
        this.fecharTurmaButton.addActionListener(e -> control.closeTurma());
    }

    @Override
    public void dispose() {
        this.control.changeView(MAIN_VIEW);
        super.dispose();
    }

    private void populateAlunos() {
        final Turma turma = (Turma) this.turmaBox.getSelectedItem();
        if (turma != null) {
            final List<Aluno> alunos = this.control.getTurmaControl().getAlunos(turma.getId());
            final DefaultComboBoxModel<Aluno> alunoModel = new DefaultComboBoxModel<>();
            alunoModel.addAll(alunos);
            this.alunoBox.setModel(alunoModel);

            final boolean bool = this.control.getTurmaControl().allContainsNotas(turma.getId()) || turma.getMatriculas().isEmpty();
            this.fecharTurmaButton.setEnabled(bool);
        }
    }

    public Turma getTurma() { return (Turma) this.turmaBox.getSelectedItem(); }

    public Aluno getAluno() { return (Aluno) this.alunoBox.getSelectedItem(); }

    public String getNota() { return this.notaField.getText(); }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        this.notaField = new JFormattedTextField(decimalMask);

        this.turmaBox = new JComboBox<>();
        final List<Turma> turmas = this.control.getTurmaControl().getAll().stream().filter(t -> t.getEstado() != FECHADA).collect(Collectors.toList());
        final DefaultComboBoxModel<Turma> turmaModel = new DefaultComboBoxModel<>();
        turmaModel.addAll(turmas);
        this.turmaBox.setModel(turmaModel);
        this.turmaBox.setSelectedItem(null);

        this.alunoBox = new JComboBox<>();
        this.populateAlunos();
    }

    public void clearFields() {
        this.turmaBox.setSelectedItem(null);
        this.alunoBox.setSelectedItem(null);
        this.notaField.setValue(null);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(4, 2, new Insets(10, 10, 10, 10), - 1, - 1));
        panel.setBackground(new Color(- 13487566));
        panel.add(turmaBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(- 1, 30), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setForeground(new Color(- 3618616));
        label1.setText("Aluno");
        panel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setForeground(new Color(- 3618616));
        label2.setText("Turma");
        panel.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setForeground(new Color(- 3618616));
        label3.setText("Nota");
        panel.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel.add(alunoBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(- 1, 30), null, 0, false));
        panel.add(notaField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(- 1, 30), null, 0, false));
        fecharTurmaButton = new JButton();
        fecharTurmaButton.setEnabled(false);
        fecharTurmaButton.setFocusPainted(false);
        fecharTurmaButton.setText("Fechar Turma");
        panel.add(fecharTurmaButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(- 1, 30), null, 0, false));
        salvarNotaButton = new JButton();
        salvarNotaButton.setFocusPainted(false);
        salvarNotaButton.setText("Salvar Nota");
        panel.add(salvarNotaButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(- 1, 30), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() { return panel; }

}
