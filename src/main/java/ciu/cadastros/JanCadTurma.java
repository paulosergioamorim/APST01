package ciu.cadastros;

import cci.ControladorPrincipal;
import cdp.Curso;
import cdp.Professor;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.time.LocalDate;
import java.time.LocalTime;

import static cdp.Formatters.*;
import static cgt.AplGerenciarCurso.lstCursos;
import static cgt.AplGerenciarPessoa.getProfessores;

public class JanCadTurma extends JFrame {
    private final ControladorPrincipal controlador;

    private JPanel Panel;
    private JButton Salvar;
    private JFormattedTextField DataFim;
    private JFormattedTextField DataInicio;
    private JFormattedTextField LimiteAlunos;
    private JFormattedTextField Horario;
    private JComboBox<Curso> Curso;
    private JComboBox<Professor> Professor;

    public JanCadTurma(ControladorPrincipal controlador) {
        super("Cadastro de Turma");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setContentPane(Panel);
        this.setSize(400, 400);
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        this.controlador = controlador;

        DefaultComboBoxModel<Curso> modelCurso = new DefaultComboBoxModel<>();
        modelCurso.addAll(lstCursos);
        Curso.setModel(modelCurso);

        DefaultComboBoxModel<Professor> modelProfessor = new DefaultComboBoxModel<>();
        modelProfessor.addAll(getProfessores());
        Professor.setModel(modelProfessor);

        LimiteAlunos.setFormatterFactory(getFormatterFactory(int3Mask));
        DataInicio.setFormatterFactory(getFormatterFactory(dateMask));
        DataFim.setFormatterFactory(getFormatterFactory(dateMask));
        Horario.setFormatterFactory(getFormatterFactory(timeMask));

        Salvar.addActionListener(e -> {
            try {
                LocalDate dataInicio = LocalDate.parse(DataInicio.getText(), dateFormatter);
                LocalDate dataFim = LocalDate.parse(DataFim.getText(), dateFormatter);
                int limiteAlunos = Integer.parseInt(LimiteAlunos.getText());
                LocalTime horario = LocalTime.parse(Horario.getText(), timeFormatter);
                Curso curso = (Curso) Curso.getSelectedItem();
                Professor professor = (Professor) Professor.getSelectedItem();
                controlador.cadastrarTurma(dataInicio, dataFim, horario, limiteAlunos, curso, professor);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar turma", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        });
    }

    @Override
    public void dispose() {
        controlador.exibirJanPrincipal();
        super.dispose();
    }

    public JFormattedTextField getDataFim() { return DataFim; }

    public JFormattedTextField getDataInicio() { return DataInicio; }

    public JTextField getLimiteAlunos() { return LimiteAlunos; }

    public JFormattedTextField getHorario() { return Horario; }

    public JComboBox<Curso> getCurso() { return Curso; }

    public JComboBox<Professor> getProfessor() { return Professor; }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Panel = new JPanel();
        Panel.setLayout(new GridLayoutManager(7, 2, new Insets(10, 10, 10, 10), -1, -1));
        Panel.setBackground(new Color(-13487566));
        Salvar = new JButton();
        Salvar.setBackground(new Color(-11513776));
        Salvar.setBorderPainted(false);
        Salvar.setFocusPainted(false);
        Salvar.setForeground(new Color(-3289651));
        Salvar.setText("Salvar");
        Panel.add(Salvar, new GridConstraints(6, 0, 1, 2, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setForeground(new Color(-3289651));
        label1.setText("Data Final");
        Panel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setForeground(new Color(-3289651));
        label2.setText("Limite de Alunos");
        Panel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setForeground(new Color(-3289651));
        label3.setText("Data de Início");
        Panel.add(label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setForeground(new Color(-3289651));
        label4.setText("Curso");
        Panel.add(label4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setForeground(new Color(-3289651));
        label5.setText("Professor");
        Panel.add(label5, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        LimiteAlunos = new JFormattedTextField();
        Panel.add(LimiteAlunos, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        DataFim = new JFormattedTextField();
        DataFim.setColumns(0);
        Panel.add(DataFim, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        DataInicio = new JFormattedTextField();
        Panel.add(DataInicio, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setForeground(new Color(-3289651));
        label6.setText("Horário");
        Panel.add(label6, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Horario = new JFormattedTextField();
        Panel.add(Horario, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        Curso = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        Curso.setModel(defaultComboBoxModel1);
        Panel.add(Curso, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Professor = new JComboBox();
        Panel.add(Professor, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() { return Panel; }

}
